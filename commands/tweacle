#!/usr/bin/env okshell

if (arguments.length < 1) {
  usage("usage: tweacle command [arguments]");
}

var MediaType = Java.type('okhttp3.MediaType');
var RequestBody = Java.type('okhttp3.RequestBody');

var command = arguments[0];

function postAndReadJson(url) {
  var body = RequestBody.create(MediaType.parse("application/x-www-form-urlencoded"), "");

  var request = requestBuilder
    .url(url)
    .method("POST", body)
    .build();

  return execute(request);
}

if (command == "list") {
	var user = arguments[1];
	var a = query("https://api.twitter.com/1.1/collections/list.json?screen_name=" + user);

	var collections = a.objects.timelines;

	for (var key in collections) {
		var coll = collections[key];
		print(key + "\t" + coll.name + "\t" + coll.collection_url);
	}
} else if (command == "entries") {
	var key = arguments[1];
	var a = query("https://api.twitter.com/1.1/collections/entries.json?id=" + key + "&tweet_mode=extended");

	var tweets = a.objects.tweets;

	for (var tweet_id in tweets) {
		var tweet = tweets[tweet_id];
		var user_id = tweet.user.id_str;
		var user = a.objects.users[user_id];

		print(tweet.id_str + "\t@" + user.screen_name + "\t" + tweet.full_text);

	    if (tweet.entities) {
	      if (tweet.entities.media) {
	        tweet.entities.media.map(function(media) {
	          show(media.media_url_https + ":thumb");
	        });
	      }
	    }
	}
} else if (command == "add") {
	var key = arguments[1];
	var tweet_id = arguments[2];

	var response = postAndReadJson("https://api.twitter.com/1.1/collections/entries/add.json?id=" + key + "&tweet_id=" + tweet_id);

	if (response.response.errors.length > 0) {
		print(response.response.errors);
	}
}
